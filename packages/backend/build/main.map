{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/characters/index.js","webpack:///./src/config/index.js","webpack:///./src/index.js","webpack:///external \"apollo-server\"","webpack:///external \"convict\"","webpack:///external \"graphql-modules\"","webpack:///external \"path\"","webpack:///external \"querystring\"","webpack:///external \"superagent\""],"names":["charactersModule","createModule","id","__dirname","typeDefs","gql","resolvers","Query","hello","api","config","get","params","querystring","stringify","apikey","publicKey","hash","ts","res","superagent","url","console","log","body","data","convict","env","format","default","arg","port","doc","filePath","path","join","loadFile","validate","application","createApplication","modules","PORT","process","schema","createSchemaForApollo","server","ApolloServer","listen","then"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { createModule, gql } from \"graphql-modules\";\nimport superagent from \"superagent\";\nimport querystring from \"querystring\";\nimport config from \"../config\";\n\nexport const charactersModule = createModule({\n  id: \"characters-module\",\n  __dirname: __dirname,\n  typeDefs: gql`\n    type Query {\n      hello: String\n    }\n  `,\n  resolvers: {\n    Query: {\n      hello: async () => {\n        const api = config.get(\"api\");\n\n        const params = querystring.stringify({\n          apikey: api.publicKey,\n          hash: api.hash,\n          ts: 1,\n        });\n\n        const res = await superagent.get(\n          `${api.url}/v1/public/characters?${params}`\n        );\n\n        console.log(res.body.data);\n\n        return \"Hello world!\";\n      },\n    },\n  },\n});\n","import path from \"path\";\nimport convict from \"convict\";\n\nconst config = convict({\n  env: {\n    format: [\"production\", \"development\", \"test\"],\n    default: \"development\",\n    arg: \"env\",\n    env: \"NODE_ENV\",\n  },\n  port: {\n    doc: \"The port to bind.\",\n    format: \"port\",\n    default: 8000,\n    env: \"PORT\",\n  },\n  api: {\n    url: \"http://gateway.marvel.com\",\n    publicKey: {\n      default: \"\",\n      arg: \"public_key\",\n      env: \"PUBLIC_KEY\",\n    },\n    hash: {\n      default: \"\",\n      arg: \"hash\",\n      env: \"HASH\",\n    },\n  },\n});\n\nconst env = config.get(\"env\");\n\nif (env !== \"production\") {\n  const filePath = path.join(__dirname, `${env}.json`);\n  config.loadFile(filePath);\n}\n\nconfig.validate();\n\nexport default config;\n","// import express from \"express\";\nimport { ApolloServer } from \"apollo-server\";\nimport { createApplication } from \"graphql-modules\";\nimport { charactersModule } from \"./characters\";\n\nconst application = createApplication({\n  modules: [charactersModule],\n});\n\nconst PORT = process.env.PORT || 4000;\n\nconst schema = application.createSchemaForApollo();\n\nconst server = new ApolloServer({ schema });\n\nserver.listen({ port: PORT }).then(({ url }) => {\n  console.log(`ðŸš€ Server ready at ${url}`);\n});\n","module.exports = require(\"apollo-server\");","module.exports = require(\"convict\");","module.exports = require(\"graphql-modules\");","module.exports = require(\"path\");","module.exports = require(\"querystring\");","module.exports = require(\"superagent\");"],"sourceRoot":""}